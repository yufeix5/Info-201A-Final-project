source("app_ui.R")
install.packages("rsconnect")
library(rsconnect)
deployApp()
proj_server <- function(input, output) {
output$graph_one <- renderPlotly({
data <-table(graph_one$neighbourhood_group, graph_one$room_type)
barplot(data, beside=TRUE)
p <- ggplot(data = graph_one, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
})
}
library("shiny")
library("lintr")
library("dplyr")
library("ggplot2")
df <- read.csv("AB_NYC_2019.csv", stringsAsFactors = F)
# Data wrangling space #
# For Map
unique_neighborhood <- unique(df$neighbourhood_group)
unique_type <- unique(df$room_type)
# Shiny User Interface #
information_page <- tabPanel(
"Introduction"
)
plot_page <- tabPanel(
"Comparing Different Room Types in Neighborhood",
sidebarLayout(
sidebarPanel(
selectInput(
"Neighborhood",
label = "Choose a type",
choices = unique_type,
selected = "Private room"
)
),
mainPanel(
plotOutput(outputId = "graph_one")
)
),
p("What we can learn from this data:"),
tags$ul(
tags$li("......"),
tags$li(".......")
)
)
proj_ui <- navbarPage(
"Airbnb in New York City",
information_page,
plot_page
)
source("app_ui.R")
deployApp()
proj_server <- function(input, output) {
output$graph_one <- renderPlotly({
data <-table(graph_one$neighbourhood_group, graph_one$room_type)
barplot(data, beside=TRUE)
p <- ggplot(data = graph_one, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
})
}
runApp()
View(proj_ui)
graph_one <- select(df, neighbourhood_group, room_type)
View(graph_one)
library("dplyr")
library("plotly")
library("shiny")
proj_server <- function(input, output) {
output$bar_plot <- renderPlotly({
graph_one <- select(df, neighbourhood_group, room_type)
data <-table(graph_one$neighbourhood_group, graph_one$room_type)
barplot(data, beside=TRUE)
p <- ggplot(data = graph_one, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
})
}
runApp()
bar_data <- group_by(df, df$room_type)
View(bar_data)
bar_data <- group_by(df, room_type)
bar_data <- group_by(neighbourhood_group, room_type)
bar_data <- group_by(df$neighbourhood_group, room_type)
bar_data <- table(df$neighbourhood_group, df$room_type)
View(graph_one)
source("app_ui.R")
barplot(bar_data, beside=TRUE)
output$bar_plot <- renderPlotly({
barplot(bar_data, beside=TRUE)
p <- ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
output$bar_plot <- renderPlotly({
barplot(bar_data, beside=TRUE)
p <- ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
p <- ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
output$bar_plot <- renderPlotly({
barplot(bar_data, beside=TRUE)
p <- ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
information_page <- tabPanel(
"Introduction"
)
runApp()
runApp()
runApp()
runApp()
runApp()
proj_ui <- navbarPage(
"Airbnb in New York City",
information_page,
plot_page
)
runApp()
runApp()
runApp()
runApp()
runApp()
p + geom_bar(stat = "identity")
barplot(bar_data, beside=TRUE)
p <- ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
barplot(bar_data, beside=TRUE)
p <- ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
barplot(bar_data, beside=TRUE)
p <- ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
source("app_ui.R")
output$bar_plot <- renderPlotly({
barplot(bar_data, beside=TRUE)
ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
output$bar_plot <- renderPlotly({
barplot(bar_data, beside=TRUE)
ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
output$bar_plot <- renderPlotly({
barplot(bar_data, beside=TRUE)
ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
output$bar_plot <- renderPlotly({
barplot(bar_data, beside=TRUE)
ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
output$bar_plot <- renderPlotly({
barplot(bar_data, beside=TRUE)
ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
output$bar_plot <- renderPlotly({
barplot(bar_data, beside=TRUE)
ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
output$bar_plot <- renderPlotly({
barplot(bar_data, beside=TRUE)
ggplot(data = bar_data, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
p <- ggplot(data = df, aes(x = df$neighbourhood_group, y = df$room_type)) +
geom_bar(stat="identity")
return(p)
proj_server <- function(input, output) {
output$bar_plot <- renderPlotly({
p <- ggplot(data = df, aes(x = df$neighbourhood_group, y = df$room_type)) +
geom_bar(stat="identity")
return(p)
})
}
proj_server <- function(input, output) {
output$bar_plot <- renderPlotly({
p <- ggplot(data = df, aes(x = df$neighbourhood_group, y = df$room_type)) +
geom_bar(stat="identity")
return(p)
})
}
p <- ggplot(data = df, aes(x = df$neighbourhood_group, y = df$room_type)) +
geom_bar(stat="identity")
p <- ggplot(data = df, aes(x = df$neighbourhood_group, y = df$room_type)) +
geom_bar(stat="identity")
p <- ggplot(data = df, aes(x = df$neighbourhood_group, y = df$room_type)) +
geom_bar(stat="identity")
p <- ggplot(data = df, aes(x = df$neighbourhood_group, y = df$room_type)) +
geom_bar(stat="identity")
p <- ggplot(data = df, aes(x = df$neighbourhood_group, y = df$room_type)) +
geom_bar(stat="identity")
plot_page <- tabPanel(
"Comparing Different Room Types in Neighborhood",
sidebarLayout(
sidebarPanel(
selectInput(
"Neighborhood",
label = "Choose a type",
choices = unique_type,
selected = "Private room"
)
),
mainPanel(
plotOutput(outputId = "bar_plot")
)
),
p("What we can learn from this data:"),
tags$ul(
tags$li("......"),
tags$li(".......")
)
)
runApp()
runApp()
runApp()
ggplot(data = df, aes(x = df$neighbourhood_group, y = df$room_type)) +
geom_bar(stat="identity")
source("app_ui.R")
proj_server <- function(input, output) {
output$bar_plot <- renderPlotly({
ggplot(data = df, aes(x = df$neighbourhood_group, y = df$room_type)) +
geom_bar(stat="identity")
})
}
rbind(bar_data)
df <- read.csv("AB_NYC_2019.csv", stringsAsFactors = F)
graph_one <- select(df, neighbourhood_group, room_type)
data <-table(graph_one$neighbourhood_group, graph_one$room_type)
barplot(data, beside=TRUE)
p <- ggplot(data = graph_one, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
df <- read.csv("AB_NYC_2019.csv", stringsAsFactors = F)
graph_one <- select(df, neighbourhood_group, room_type)
data <-table(graph_one$neighbourhood_group, graph_one$room_type)
barplot(data, beside=TRUE)
p <- ggplot(data = graph_one, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
barplot(data, beside=TRUE)
p <- ggplot(data = graph_one, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
library(ggplot2)
library(dplyr)
library(shiny)
df <- read.csv("AB_NYC_2019.csv", stringsAsFactors = F)
graph_one <- select(df, neighbourhood_group, room_type)
data <-table(graph_one$neighbourhood_group, graph_one$room_type)
barplot(data, beside=TRUE)
p <- ggplot(data = graph_one, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
Brooklyn <- graph_one %>%
filter(neighbourhood_group == "Brooklyn") %>%
group_by(room_type) %>%
summarize(num_each_type = n())
filtered_Brooklyn <- na.omit(Brooklyn)
Manhattan <- graph_one %>%
filter(neighbourhood_group == "Manhattan") %>%
group_by(room_type) %>%
summarize(num_each_type = n())
filtered_Brooklyn <- na.omit(Manhattan)
Queens <- graph_one %>%
filter(neighbourhood_group == "Queens") %>%
group_by(room_type) %>%
summarize(num_each_type = n())
filtered_Brooklyn <- na.omit(Queens)
Bronx <- graph_one %>%
filter(neighbourhood_group == "Bronx") %>%
group_by(room_type) %>%
summarize(num_each_type = n())
filtered_Brooklyn <- na.omit(Bronx)
Staten_Island	 <- graph_one %>%
filter(neighbourhood_group == "Staten Island") %>%
group_by(room_type) %>%
summarize(num_each_type = n())
filtered_Brooklyn <- na.omit(Staten_Island)
library(ggplot2)
library(dplyr)
library(shiny)
df <- read.csv("AB_NYC_2019.csv", stringsAsFactors = F)
graph_one <- select(df, neighbourhood_group, room_type)
data <-table(graph_one$neighbourhood_group, graph_one$room_type)
barplot(data, beside=TRUE)
p <- ggplot(data = graph_one, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
Brooklyn <- graph_one %>%
filter(neighbourhood_group == "Brooklyn") %>%
group_by(room_type) %>%
summarize(num_each_type = n())
filtered_Brooklyn <- na.omit(Brooklyn)
Manhattan <- graph_one %>%
filter(neighbourhood_group == "Manhattan") %>%
group_by(room_type) %>%
summarize(num_each_type = n())
filtered_Brooklyn <- na.omit(Manhattan)
Queens <- graph_one %>%
filter(neighbourhood_group == "Queens") %>%
group_by(room_type) %>%
summarize(num_each_type = n())
filtered_Brooklyn <- na.omit(Queens)
Bronx <- graph_one %>%
filter(neighbourhood_group == "Bronx") %>%
group_by(room_type) %>%
summarize(num_each_type = n())
filtered_Brooklyn <- na.omit(Bronx)
Staten_Island	 <- graph_one %>%
filter(neighbourhood_group == "Staten Island") %>%
group_by(room_type) %>%
summarize(num_each_type = n())
filtered_Brooklyn <- na.omit(Staten_Island)
barplot(data, beside=TRUE)
p <- ggplot(data = graph_one, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
barplot(data, beside=TRUE)
barplot(data, beside=TRUE)
barplot(data, beside=TRUE)
proj_server <- function(input, output) {
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
output$bar_plot <- renderPlot({
p <- ggplot(data = reactive_data(), aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
})
}
proj_server <- function(input, output) {
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
output$bar_plot <- renderPlot({
p <- ggplot(data = reactive_data(), aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
})
}
p <- ggplot(data = reactive_data(), aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
p <- ggplot(data = reactive_data(), aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
source("app_ui.R")
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
reactive_data = reactive({
selected_type = input$room_type
return(df[df$room_type==selected_type,])
})
graph_one <- select(df, neighbourhood_group, room_type)
data <-table(graph_one$neighbourhood_group, graph_one$room_type)
barplot(data, beside=TRUE)
p <- ggplot(data = graph_one, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
graph_one <- select(df, neighbourhood_group, room_type)
data <-table(graph_one$neighbourhood_group, graph_one$room_type)
barplot(data, beside=TRUE)
p <- ggplot(data = graph_one, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
graph_one <- select(df, neighbourhood_group, room_type)
data <-table(graph_one$neighbourhood_group, graph_one$room_type)
barplot(data, beside=TRUE)
p <- ggplot(data = graph_one, aes(x=neighbourhood_group,
y=room_type,
fill = room_type))
p + geom_bar(stat = "identity")
